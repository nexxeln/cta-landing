---
import { getLanguageFromURL } from "../../languages";
import { SIDEBAR } from "../../config";
export interface Props {
  currentPage: string;
}
const { currentPage } = Astro.props as Props;
const currentPageMatch = currentPage.slice(1);
const langCode = getLanguageFromURL(currentPage);
// SIDEBAR is a flat array. Group it by sections to properly render.
const sidebarSections = SIDEBAR[langCode].reduce((col, item, i) => {
  // If the first item is not a section header, create a new container section.
  if (i === 0) {
    if (!item.header) {
      const pesudoSection = { text: "" };
      col.push({ ...pesudoSection, children: [] });
    }
  }
  if (item.header) {
    col.push({ ...item, children: [] });
  } else {
    col[col.length - 1].children.push(item);
  }
  return col;
}, []);
---

<nav class="w-fit pb-64">
  <ul
    class="h-full max-h-screen overflow-y-auto overflow-x-visible px-8 space-y-4 scrollbar-thin dark:scrollbar-thumb-slate-500 scrollbar-thumb-slate-800 scrollbar-track-brand-primary"
  >
    {sidebarSections.map((section) => (
      <li>
        <div>
          <h2 class="p-1 mb-2 font-bold text-black dark:text-slate-50 text-xl">
            {section.text}
          </h2>
          <ul>
            {section.children.map((child) => {
              return (
                <li class="pl-2 pb-1 hover:underline hover:underline-offset-2 text-black dark:text-slate-50 text-base">
                  <a
                    title={child.text}
                    href={
                      child.external
                        ? `${child.link}`
                        : `${Astro.site.pathname}${child.link}`
                    }
                    rel="noopener noreferrer"
                    target={child.external ? "_blank" : "_self"}
                    aria-current={`${
                      currentPageMatch === child.link ? "page" : "false"
                    }`}
                    class={`${
                      currentPageMatch === child.link
                        ? "font-extrabold italic"
                        : "font-semibold"
                    }`}
                  >
                    {child.external ? `${child.text}â†—` : `${child.text}`}
                  </a>
                </li>
              );
            })}
          </ul>
        </div>
      </li>
    ))}
  </ul>
</nav>

<script is:inline>
  window.addEventListener("DOMContentLoaded", (event) => {
    var target = document.querySelector('[aria-current="page"]');
    if (target && target.offsetTop > window.innerHeight - 100) {
      document.querySelector(".nav-groups").scrollTop = target.offsetTop;
    }
  });
</script>

<style>
  .nav-groups > li + li {
    margin-top: 2rem;
  }

  .nav-groups > :first-child {
    padding-top: var(--doc-padding);
  }

  .nav-groups > :last-child {
    padding-bottom: 2rem;
    margin-bottom: var(--theme-navbar-height);
  }

  .nav-group-title {
    font-size: 1rem;
    font-weight: 700;
    padding: 0.1rem 1rem;
    text-transform: uppercase;
    margin-bottom: 0.5rem;
  }

  .nav-link a {
    font-size: 1rem;
    margin: 1px;
    padding: 0.3rem 1rem;
    font: inherit;
    color: inherit;
    text-decoration: none;
    display: block;
  }
  .nav-link a:hover,
  .nav-link a:focus {
    background-color: var(--theme-bg-hover);
  }

  .nav-link a[aria-current="page"] {
    color: var(--theme-text-accent);
    background-color: var(--theme-bg-accent);
    font-weight: 600;
  }

  :global(:root.theme-dark) .nav-link a[aria-current="page"] {
    color: hsla(var(--color-base-white), 100%, 1);
  }

  @media (min-width: 50em) {
    .nav-groups {
      padding: 0;
    }
  }
</style>
